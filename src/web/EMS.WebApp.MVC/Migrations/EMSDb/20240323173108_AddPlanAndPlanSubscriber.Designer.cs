// <auto-generated />
using System;
using EMS.WebApp.MVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMS.WebApp.MVC.Migrations.EMSDb
{
    [DbContext(typeof(EMSDbContext))]
    [Migration("20240323173108_AddPlanAndPlanSubscriber")]
    partial class AddPlanAndPlanSubscriber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EMS.WebApp.MVC.Business.Models.Subscription.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Benefits")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Plans", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.MVC.Business.Models.Subscription.PlanSubscriber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubscriberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserCpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("PlanSubscribers", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.MVC.Business.Models.Users.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.MVC.Business.Models.Users.Subscriber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("EMS.WebApp.MVC.Business.Models.Subscription.PlanSubscriber", b =>
                {
                    b.HasOne("EMS.WebApp.MVC.Business.Models.Subscription.Plan", "Plan")
                        .WithMany("PlanSubscribers")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("EMS.WebApp.MVC.Business.Models.Users.Address", b =>
                {
                    b.HasOne("EMS.WebApp.MVC.Business.Models.Users.Subscriber", "Subscriber")
                        .WithOne("Address")
                        .HasForeignKey("EMS.WebApp.MVC.Business.Models.Users.Address", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("EMS.WebApp.MVC.Business.Models.Users.Subscriber", b =>
                {
                    b.OwnsOne("EMS.WebApp.MVC.Business.DomainObjects.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("SubscriberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("varchar(11)")
                                .HasColumnName("Cpf");

                            b1.HasKey("SubscriberId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("SubscriberId");
                        });

                    b.OwnsOne("EMS.WebApp.MVC.Business.DomainObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("SubscriberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("varchar(254)")
                                .HasColumnName("Email");

                            b1.HasKey("SubscriberId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("SubscriberId");
                        });

                    b.Navigation("Cpf");

                    b.Navigation("Email");
                });

            modelBuilder.Entity("EMS.WebApp.MVC.Business.Models.Subscription.Plan", b =>
                {
                    b.Navigation("PlanSubscribers");
                });

            modelBuilder.Entity("EMS.WebApp.MVC.Business.Models.Users.Subscriber", b =>
                {
                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
